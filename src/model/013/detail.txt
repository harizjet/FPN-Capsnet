IPyramidCapsuleNet(
  (conv1): Conv2d(1, 128, kernel_size=(3, 3), stride=(1, 1))
  (primary_capsules1): CapsuleLayer(
    (capsules): ModuleList(
      (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(2, 2))
      (1): Conv2d(128, 32, kernel_size=(3, 3), stride=(2, 2))
      (2): Conv2d(128, 32, kernel_size=(3, 3), stride=(2, 2))
      (3): Conv2d(128, 32, kernel_size=(3, 3), stride=(2, 2))
      (4): Conv2d(128, 32, kernel_size=(3, 3), stride=(2, 2))
      (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(2, 2))
      (6): Conv2d(128, 32, kernel_size=(3, 3), stride=(2, 2))
      (7): Conv2d(128, 32, kernel_size=(3, 3), stride=(2, 2))
    )
  )
  (digit_capsules1): CapsuleLayer()
  (conv2): Conv2d(1, 128, kernel_size=(4, 4), stride=(1, 1))
  (primary_capsules2): CapsuleLayer(
    (capsules): ModuleList(
      (0): Conv2d(128, 32, kernel_size=(5, 5), stride=(2, 2))
      (1): Conv2d(128, 32, kernel_size=(5, 5), stride=(2, 2))
      (2): Conv2d(128, 32, kernel_size=(5, 5), stride=(2, 2))
      (3): Conv2d(128, 32, kernel_size=(5, 5), stride=(2, 2))
      (4): Conv2d(128, 32, kernel_size=(5, 5), stride=(2, 2))
      (5): Conv2d(128, 32, kernel_size=(5, 5), stride=(2, 2))
      (6): Conv2d(128, 32, kernel_size=(5, 5), stride=(2, 2))
      (7): Conv2d(128, 32, kernel_size=(5, 5), stride=(2, 2))
    )
  )
  (digit_capsules2): CapsuleLayer()
  (conv3): Conv2d(1, 128, kernel_size=(9, 9), stride=(1, 1))
  (primary_capsules3): CapsuleLayer(
    (capsules): ModuleList(
      (0): Conv2d(128, 32, kernel_size=(9, 9), stride=(2, 2))
      (1): Conv2d(128, 32, kernel_size=(9, 9), stride=(2, 2))
      (2): Conv2d(128, 32, kernel_size=(9, 9), stride=(2, 2))
      (3): Conv2d(128, 32, kernel_size=(9, 9), stride=(2, 2))
      (4): Conv2d(128, 32, kernel_size=(9, 9), stride=(2, 2))
      (5): Conv2d(128, 32, kernel_size=(9, 9), stride=(2, 2))
      (6): Conv2d(128, 32, kernel_size=(9, 9), stride=(2, 2))
      (7): Conv2d(128, 32, kernel_size=(9, 9), stride=(2, 2))
    )
  )
  (digit_capsules3): CapsuleLayer()
)