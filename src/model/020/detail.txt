FPNCapsuleNet(
  (conv1): Conv2d(1, 64, kernel_size=(9, 9), stride=(1, 1), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layer1): Sequential(
    (0): Bottleneck(
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
  )
  (layer2): Sequential(
    (0): Bottleneck(
      (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
  )
  (toplayer): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
  (smooth1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (smooth2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (latlayer1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1))
  (latlayer2): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
  (primary_capsules1): CapsuleLayer(
    (capsules): ModuleList(
      (0): Conv2d(64, 32, kernel_size=(9, 9), stride=(2, 2))
      (1): Conv2d(64, 32, kernel_size=(9, 9), stride=(2, 2))
      (2): Conv2d(64, 32, kernel_size=(9, 9), stride=(2, 2))
      (3): Conv2d(64, 32, kernel_size=(9, 9), stride=(2, 2))
      (4): Conv2d(64, 32, kernel_size=(9, 9), stride=(2, 2))
      (5): Conv2d(64, 32, kernel_size=(9, 9), stride=(2, 2))
      (6): Conv2d(64, 32, kernel_size=(9, 9), stride=(2, 2))
      (7): Conv2d(64, 32, kernel_size=(9, 9), stride=(2, 2))
    )
  )
  (digit_capsules1): CapsuleLayer()
  (primary_capsules2): CapsuleLayer(
    (capsules): ModuleList(
      (0): Conv2d(64, 32, kernel_size=(9, 9), stride=(2, 2))
      (1): Conv2d(64, 32, kernel_size=(9, 9), stride=(2, 2))
      (2): Conv2d(64, 32, kernel_size=(9, 9), stride=(2, 2))
      (3): Conv2d(64, 32, kernel_size=(9, 9), stride=(2, 2))
      (4): Conv2d(64, 32, kernel_size=(9, 9), stride=(2, 2))
      (5): Conv2d(64, 32, kernel_size=(9, 9), stride=(2, 2))
      (6): Conv2d(64, 32, kernel_size=(9, 9), stride=(2, 2))
      (7): Conv2d(64, 32, kernel_size=(9, 9), stride=(2, 2))
    )
  )
  (digit_capsules2): CapsuleLayer()
  (primary_capsules3): CapsuleLayer(
    (capsules): ModuleList(
      (0): Conv2d(64, 32, kernel_size=(9, 9), stride=(2, 2))
      (1): Conv2d(64, 32, kernel_size=(9, 9), stride=(2, 2))
      (2): Conv2d(64, 32, kernel_size=(9, 9), stride=(2, 2))
      (3): Conv2d(64, 32, kernel_size=(9, 9), stride=(2, 2))
      (4): Conv2d(64, 32, kernel_size=(9, 9), stride=(2, 2))
      (5): Conv2d(64, 32, kernel_size=(9, 9), stride=(2, 2))
      (6): Conv2d(64, 32, kernel_size=(9, 9), stride=(2, 2))
      (7): Conv2d(64, 32, kernel_size=(9, 9), stride=(2, 2))
    )
  )
  (digit_capsules3): CapsuleLayer()
)